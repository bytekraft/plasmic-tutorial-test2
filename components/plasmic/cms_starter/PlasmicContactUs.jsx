// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sbQ784b4v9HnQXnL8f6uoX
// Component: BxLe4fQi8ixo
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateStateOnChangeProp,
  generateStateValueProp,
  hasVariant,
  useCurrentUser,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import TextInput from "../../TextInput"; // plasmic-import: K9ZFSgMmhAeT/component
import Button from "../../Button"; // plasmic-import: 56QpFLxenneH/component
import { useScreenVariants as useScreenVariantsbJAq6MTDd224 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: bJAq6mTDd224/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_cms_starter.module.css"; // plasmic-import: sbQ784b4v9HnQXnL8f6uoX/projectcss
import sty from "./PlasmicContactUs.module.css"; // plasmic-import: BxLe4fQi8ixo/css
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: l6NKX-oc93h1/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: Ml4X9usPK9JQ/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: T3H0gzYoTgXi/icon

createPlasmicElementProxy;

export const PlasmicContactUs__VariantProps = new Array();

export const PlasmicContactUs__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicContactUs__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "textarea.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbJAq6MTDd224()
  });
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__xEtZ)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bGhmy)}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__jaIsA
                )}
                component={Link}
                platform={"nextjs"}
              >
                <PlasmicImg__
                  data-plasmic-name={"img"}
                  data-plasmic-override={overrides.img}
                  alt={""}
                  className={classNames(sty.img)}
                  displayHeight={"78px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"78px"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={"/plasmic/cms_starter/images/image37.svg"}
                />
              </PlasmicLink__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hbzrG)}
              >
                <Stack__
                  as={PlasmicLink__}
                  data-plasmic-name={"aboutUs"}
                  data-plasmic-override={overrides.aboutUs}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.aboutUs
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__uAmt8)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ij1Sl
                    )}
                  >
                    {"About Us"}
                  </div>
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__xkgOm)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___3RYoS
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__uHtm)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__duUir
                    )}
                  >
                    {"Services"}
                  </div>
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__cj0Uv)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__iQeRp
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__e8F9Q)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6U1Uh
                    )}
                  >
                    {"Clients"}
                  </div>
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg___9MmaN)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__a26Ge
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__adOSy)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dhHqV
                    )}
                  >
                    {"Blog"}
                  </div>
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__y0J38)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___94Q0
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__aFj8A)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    data-plasmic-name={"contact"}
                    data-plasmic-override={overrides.contact}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.contact
                    )}
                  >
                    {"Contact Us"}
                  </div>
                  {false ? (
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg___1254G)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
              </Stack__>
            </Stack__>
          </Stack__>
          <div
            data-plasmic-name={"banner"}
            data-plasmic-override={overrides.banner}
            className={classNames(projectcss.all, sty.banner)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__srb9Y)}
              >
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Contact us"
                    : "Contact us"}
                </h1>
              </Stack__>
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"clientsSection5"}
            data-plasmic-override={overrides.clientsSection5}
            hasGap={true}
            className={classNames(projectcss.all, sty.clientsSection5)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dz10I)}
            >
              <div className={classNames(projectcss.all, sty.columns__ulDoJ)}>
                <div className={classNames(projectcss.all, sty.column__yPq4I)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aTjf6
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Proactively architect worldwide sources, then globally implement enabled  users, then collaboratively innovate unique expertise, then continually  strategize excellent markets."
                      : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column___8YKq)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__oDzAj)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__oEHyn)}
                    >
                      <div
                        data-plasmic-name={"formWrapper"}
                        data-plasmic-override={overrides.formWrapper}
                        className={classNames(projectcss.all, sty.formWrapper)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.columns__ajMf1
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column__wmMd
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__h7Ru
                              )}
                            >
                              {"First name"}
                            </div>
                            <TextInput
                              data-plasmic-name={"name"}
                              data-plasmic-override={overrides.name}
                              className={classNames("__wab_instance", sty.name)}
                              endIcon={
                                <ChecksvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__pAXg
                                  )}
                                  role={"img"}
                                />
                              }
                              placeholder={""}
                              startIcon={
                                <SearchsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___44DcP
                                  )}
                                  role={"img"}
                                />
                              }
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column__pGeSn
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qvpoa
                              )}
                            >
                              {"Last name"}
                            </div>
                            <TextInput
                              data-plasmic-name={"name2"}
                              data-plasmic-override={overrides.name2}
                              className={classNames(
                                "__wab_instance",
                                sty.name2
                              )}
                              endIcon={
                                <ChecksvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__kiMhO
                                  )}
                                  role={"img"}
                                />
                              }
                              placeholder={""}
                              startIcon={
                                <SearchsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___1Itty
                                  )}
                                  role={"img"}
                                />
                              }
                            />
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.columns___3Nj0S
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column__iKpSg
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ulF5L
                              )}
                            >
                              {"Email address"}
                            </div>
                            <TextInput
                              data-plasmic-name={"name5"}
                              data-plasmic-override={overrides.name5}
                              className={classNames(
                                "__wab_instance",
                                sty.name5
                              )}
                              endIcon={
                                <ChecksvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__otahC
                                  )}
                                  role={"img"}
                                />
                              }
                              placeholder={""}
                              startIcon={
                                <SearchsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___6J7DH
                                  )}
                                  role={"img"}
                                />
                              }
                            />
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column___3ZHmW
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oUvet
                              )}
                            >
                              {"Phone number"}
                            </div>
                            <TextInput
                              data-plasmic-name={"name3"}
                              data-plasmic-override={overrides.name3}
                              className={classNames(
                                "__wab_instance",
                                sty.name3
                              )}
                              endIcon={
                                <ChecksvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__dIOsL
                                  )}
                                  role={"img"}
                                />
                              }
                              placeholder={""}
                              startIcon={
                                <SearchsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__zsDmm
                                  )}
                                  role={"img"}
                                />
                              }
                            />
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.columns__kOhuQ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column___0SdGk
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__iIm2L
                              )}
                            >
                              {"Company"}
                            </div>
                            <TextInput
                              data-plasmic-name={"name4"}
                              data-plasmic-override={overrides.name4}
                              className={classNames(
                                "__wab_instance",
                                sty.name4
                              )}
                              endIcon={
                                <ChecksvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___7ZoU6
                                  )}
                                  role={"img"}
                                />
                              }
                              placeholder={""}
                              startIcon={
                                <SearchsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__jaAtk
                                  )}
                                  role={"img"}
                                />
                              }
                            />
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.columns__nnN4U
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.column__z2HKw
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__iN0I
                              )}
                            >
                              {"Message"}
                            </div>
                            <textarea
                              data-plasmic-name={"textarea"}
                              data-plasmic-override={overrides.textarea}
                              className={classNames(
                                projectcss.all,
                                projectcss.textarea,
                                sty.textarea
                              )}
                              onChange={e => {
                                generateStateOnChangeProp($state, [
                                  "textarea",
                                  "value"
                                ])(e.target.value);
                              }}
                              ref={ref => {
                                $refs["textarea"] = ref;
                              }}
                              value={
                                generateStateValueProp($state, [
                                  "textarea",
                                  "value"
                                ]) ?? ""
                              }
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__bmi5H
                              )}
                            >
                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__u4Sp
                                )}
                                endIcon={
                                  <ChecksvgIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zAoPc
                                    )}
                                    role={"img"}
                                  />
                                }
                                startIcon={
                                  <ChecksvgIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__bPtsN
                                    )}
                                    role={"img"}
                                  />
                                }
                                submitsForm={true}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__mlfQr
                                  )}
                                >
                                  {"Submit"}
                                </div>
                              </Button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__cbH8G)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bDZpo
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__ik5NY
                          )}
                        >
                          {"Address"}
                        </h2>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gB3Vp
                          )}
                        >
                          {
                            "1234 Lorem Ipsum .\nLorem Ipsum , GA 30308\n1234567890"
                          }
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yukbv
                          )}
                        >
                          {"xyz@companyname.com"}
                        </div>
                        <h4
                          data-plasmic-name={"h4"}
                          data-plasmic-override={overrides.h4}
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4
                          )}
                        >
                          {"Address 2"}
                        </h4>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vp6Oz
                          )}
                        >
                          {
                            "1234 Lorem Ipsum .\nLorem Ipsum , GA 30308\n1234567890"
                          }
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__brzQ
                          )}
                        >
                          {"xyz@companyname.com"}
                        </div>
                      </Stack__>
                    </div>
                  </Stack__>
                </div>
              </div>
            </Stack__>
          </Stack__>
          <div
            data-plasmic-name={"footerTopSection"}
            data-plasmic-override={overrides.footerTopSection}
            className={classNames(projectcss.all, sty.footerTopSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__nvkkB)}>
              <div className={classNames(projectcss.all, sty.freeBox__wTnEf)}>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"foreground3"}
                  data-plasmic-override={overrides.foreground3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground3)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___93Yk4)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__na1Hq
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Take your business to the next level"
                        : "Work with us."}
                    </h2>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4Siqb
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Rapidiously revolutionize future-proof niches, and authoritatively \nrestore user-centric e-markets."
                        : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nx6H8)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__w6InB)}
                    >
                      <Stack__
                        as={"button"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          sty.button__vntCu
                        )}
                      >
                        {false ? (
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___1IEym
                            )}
                            role={"img"}
                          />
                        ) : null}
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qzKJs
                          )}
                        >
                          {"Get IN Touch"}
                        </div>
                        {false ? (
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kyJp9
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__mykKh)}>
            <div className={classNames(projectcss.all, sty.freeBox__fBufp)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"rowWrapper"}
                data-plasmic-override={overrides.rowWrapper}
                hasGap={true}
                className={classNames(projectcss.all, sty.rowWrapper)}
              >
                <div
                  data-plasmic-name={"colmn1"}
                  data-plasmic-override={overrides.colmn1}
                  className={classNames(projectcss.all, sty.colmn1)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__qAmPw
                    )}
                  >
                    {"About us"}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ig0La
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "\u00a9 Company. All rights reserved. This site proudly built with "
                        }
                      </React.Fragment>
                      {
                        <PlasmicLink__
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__pfaG2
                          )}
                          component={Link}
                          href={"https://www.plasmic.app"}
                          platform={"nextjs"}
                        >
                          {"Plasmic"}
                        </PlasmicLink__>
                      }

                      <React.Fragment>{"."}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
                <div
                  data-plasmic-name={"colmn2"}
                  data-plasmic-override={overrides.colmn2}
                  className={classNames(projectcss.all, sty.colmn2)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__mdgCk
                    )}
                  >
                    {"Links"}
                  </h3>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__azif
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Services"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__kOidw
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"About us"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__r6R
                    )}
                    component={Link}
                    href={"#"}
                    platform={"nextjs"}
                  >
                    {"Testimonials"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___3GMpa
                    )}
                    component={Link}
                    href={"#"}
                    platform={"nextjs"}
                  >
                    {"Blog"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__mAbVl
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Contact us\n"}
                  </PlasmicLink__>
                </div>
                <div
                  data-plasmic-name={"colmn22"}
                  data-plasmic-override={overrides.colmn22}
                  className={classNames(projectcss.all, sty.colmn22)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3___7Afof
                    )}
                  >
                    {"Nav Links"}
                  </h3>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__ofYMa
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Services"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__gJoys
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"About us"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__x1Wxu
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Testimonials"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___0PRwf
                    )}
                    component={Link}
                    href={"#"}
                    platform={"nextjs"}
                  >
                    {"Blog"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__y2Wf0
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Contact us\n"}
                  </PlasmicLink__>
                </div>
                <div
                  data-plasmic-name={"colmn3"}
                  data-plasmic-override={overrides.colmn3}
                  className={classNames(projectcss.all, sty.colmn3)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__rvEdY
                    )}
                  >
                    {"Contact "}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d3Q2Q
                    )}
                  >
                    {"1234 Lorem Ipsum .\nLorem Ipsum , GA 30308"}
                  </div>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___6S52I
                    )}
                    component={Link}
                    href={"#"}
                    platform={"nextjs"}
                  >
                    {"xyz@company.com"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__bLeQ
                    )}
                    component={Link}
                    href={"#"}
                    platform={"nextjs"}
                  >
                    {"1234567890"}
                  </PlasmicLink__>
                </div>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "img",
    "aboutUs",
    "contact",
    "banner",
    "foreground2",
    "h1",
    "clientsSection5",
    "formWrapper",
    "name",
    "name2",
    "name5",
    "name3",
    "name4",
    "textarea",
    "h4",
    "footerTopSection",
    "foreground3",
    "rowWrapper",
    "colmn1",
    "colmn2",
    "colmn22",
    "colmn3"
  ],

  img: ["img"],
  aboutUs: ["aboutUs"],
  contact: ["contact"],
  banner: ["banner", "foreground2", "h1"],
  foreground2: ["foreground2", "h1"],
  h1: ["h1"],
  clientsSection5: [
    "clientsSection5",
    "formWrapper",
    "name",
    "name2",
    "name5",
    "name3",
    "name4",
    "textarea",
    "h4"
  ],

  formWrapper: [
    "formWrapper",
    "name",
    "name2",
    "name5",
    "name3",
    "name4",
    "textarea"
  ],

  name: ["name"],
  name2: ["name2"],
  name5: ["name5"],
  name3: ["name3"],
  name4: ["name4"],
  textarea: ["textarea"],
  h4: ["h4"],
  footerTopSection: ["footerTopSection", "foreground3"],
  foreground3: ["foreground3"],
  rowWrapper: ["rowWrapper", "colmn1", "colmn2", "colmn22", "colmn3"],
  colmn1: ["colmn1"],
  colmn2: ["colmn2"],
  colmn22: ["colmn22"],
  colmn3: ["colmn3"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicContactUs__ArgProps,
          internalVariantPropNames: PlasmicContactUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicContactUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicContactUs";
  } else {
    func.displayName = `PlasmicContactUs.${nodeName}`;
  }
  return func;
}

export const PlasmicContactUs = Object.assign(
  // Top-level PlasmicContactUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    aboutUs: makeNodeComponent("aboutUs"),
    contact: makeNodeComponent("contact"),
    banner: makeNodeComponent("banner"),
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    clientsSection5: makeNodeComponent("clientsSection5"),
    formWrapper: makeNodeComponent("formWrapper"),
    _name: makeNodeComponent("name"),
    name2: makeNodeComponent("name2"),
    name5: makeNodeComponent("name5"),
    name3: makeNodeComponent("name3"),
    name4: makeNodeComponent("name4"),
    textarea: makeNodeComponent("textarea"),
    h4: makeNodeComponent("h4"),
    footerTopSection: makeNodeComponent("footerTopSection"),
    foreground3: makeNodeComponent("foreground3"),
    rowWrapper: makeNodeComponent("rowWrapper"),
    colmn1: makeNodeComponent("colmn1"),
    colmn2: makeNodeComponent("colmn2"),
    colmn22: makeNodeComponent("colmn22"),
    colmn3: makeNodeComponent("colmn3"),
    // Metadata about props expected for PlasmicContactUs
    internalVariantProps: PlasmicContactUs__VariantProps,
    internalArgProps: PlasmicContactUs__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicContactUs;
/* prettier-ignore-end */
